function u(a,i){let e={keepStyle:!0,fixContentTrim:!0,fixWidth:!0,fixTableWidth:!0,fixPadding:!0,fixLinkTargets:!0,fixLinkShorten:!0,fixImageTitleAsLink:!0,createElement(t){return document.createElement("div")},onLoad:t=>t,onMount:t=>null,...i},l=[],r=e.createElement("div");r.innerHTML=a;let n=e.fixContentTrim?r.querySelector(".doc-content"):r;if(e.keepStyle){let t=r.querySelector('style[type="text/css"]');n.prepend(t)}if((e.fixWidth||e.fixPadding)&&n.setAttribute("style",[e.fixWidth&&"max-width: none",e.fixPadding&&"padding: 0 20px"].filter(Boolean).join(`;
`)),e.fixTableWidth&&l.push(`${e.selector} table { max-width: none !important; padding: 1.5rem 0 }`,`${e.selector} table td:last-child { width: auto !important }`),e.fixParaMargins&&l.push(`${e.selector} p { margin-bottom: 1rem }`),(e.fixLinkTargets||e.fixLinkShorten)&&Array.from(n.querySelectorAll("a")).filter(t=>/^https?:\/\//.test(t.getAttribute("href"))).forEach(t=>{e.fixLinkTargets&&t.setAttribute("target","_blank"),e.fixLinkShorten&&t.setAttribute("href",t.getAttribute("href").replace(/^https:\/\/www\.google\.com\/url\?q=(.*?)&.*$/,"$1").replace(/^https:\/\/www\.google\.com\/url\?q=/,"").replace(/^(.+)$/,o=>unescape(o)))}),e.fixImageTitleAsLink&&Array.from(n.querySelectorAll("img[title]")).filter(t=>/^https?:\/\//.test(t.getAttribute("title"))).forEach(t=>{let o=e.createElement("a");o.setAttribute("href",t.getAttribute("title")),e.fixLinkTargets&&o.setAttribute("target","_blank"),t.replaceWith(o),o.replaceChildren(t)}),l.length>0){let t=e.createElement("style");t.setAttribute("type","text/css"),t.innerHTML=l.join(`
`),n.prepend(t)}return e.onMount(n),n}function f(a){let i={selector:null,url:null,urlOptions:{cache:"default",headers:{Accept:"text/html"}},keepStyle:!0,fixContentTrim:!0,fixWidth:!0,fixTableWidth:!0,fixPadding:!0,fixLinkTargets:!0,fixLinkShorten:!0,fixImageTitleAsLink:!0,onLoad:r=>r,onMount:r=>null,...a},e=(r,n)=>r.setHTML?r.setHTML(n):r.innerHTML=n;if(!i.selector)throw new Error("Selector must be specified");if(!i.url)throw new Error("URL must be specified");let l=typeof i.selector=="string"?document.querySelector(i.selector):i.selector;if(!l)throw new Error(`Cannot find selector "${i.selector} to embed GDoc`);return fetch(i.url,i.urlOptions).then(r=>r.text()).then(r=>i.onLoad(r)).then(r=>u(r,a)).then(r=>l.replaceChildren(r))}export{f as default};
//# sourceMappingURL=embed-gdocs.js.map
