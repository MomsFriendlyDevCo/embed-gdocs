{"mappings":"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","sources":["src/embed-gdocs.js"],"sourcesContent":["/**\n* Embed a Google-Docs document within a webpage\n*\n* @param {Object} options Options to configure behaviour\n*\n* @param {String|HTMLElement} options.selector Either the DOM node to replace or a selector to use\n* @param {String} options.url The Google Docs published URL to embed - this generally ends in `/pub?embedded=true`\n* @param {Object} [options.urlOptions] Additional Fetch options when retrieving the document from the `url`\n* @param {Boolean} [options.keepStyle=true] Keep the source document style, if false this removes the style completely\n* @param {Boolean} [options.fixContentTrim=true] Remove the outer wrapping of the element and just use the embedded content\n* @param {Boolean} [options.fixWidth=true] Remove page width restrictions\n* @param {Boolean} [options.fixParaMargins=true] Add slight margin to paragraphs\n* @param {Boolean} [options.fixTableWidth=true] Remove table width restrictions\n* @param {Boolean} [options.fixPadding=true] Remove page padding\n* @param {Boolean} [options.fixLinkTargets=true] Make all links open in a new tab instead of replacing the current one\n* @param {Boolean} [options.fixLinkShorten=true] Remove Google tracking URL prefix from links\n* @param {Boolean} [options.fixImageTitleAsLink=true] If an image \"alternative text\" (actually the `title` attribute) looks like a link make the image linkable - this is to fix how Google Docs weirdly handles image linking\n*\n* @param {Function} [options.onLoad] Called as `(html:String)` when the HTML has been loaded, expected to return the mutated input\n* @param {Function} [options.onMount] Called as `(el:DomElement)` when the Dom element has been created but has not yet been added into the DOM, can mutate the input element\n*\n*/\nwindow.embedGDoc = function embedGdoc(options) {\n\tlet settings = {\n\t\tselector: null,\n\t\turl: null,\n\t\turlOptions: {\n\t\t\tcache: 'default',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'text/html',\n\t\t\t},\n\t\t},\n\t\tkeepStyle: true,\n\t\tfixContentTrim: true,\n\t\tfixWidth: true,\n\t\tfixTableWidth: true,\n\t\tfixPadding: true,\n\t\tfixLinkTargets: true,\n\t\tfixLinkShorten: true,\n\t\tfixImageTitleAsLink: true,\n\n\t\tonLoad: html => html,\n\t\tonMount: el => null,\n\n\t\t...options,\n\t};\n\n\t/**\n\t* Shiv wrapper as setHTML doesn't seem to be used everywhere\n\t*/\n    let setHtml = (el, html) => el.setHTML ? el.setHTML(html) : el.innerHTML = html;\n\n\tif (!settings.selector) throw new Error('Selector must be specified');\n\tif (!settings.url) throw new Error('URL must be specified');\n\n\tlet embedEl = typeof settings.selector == 'string'\n\t\t? document.querySelector(settings.selector)\n\t\t: settings.selector;\n\n\tif (!embedEl) throw new Error(`Cannot find selector \"${settings.selector} to embed GDoc`);\n\n\treturn fetch(settings.url, settings.urlOptions)\n\t\t.then(res => res.text())\n\t\t.then(html => settings.onLoad(html))\n\t\t.then(html => {\n\t\t\tlet sourceDoc = document.createElement('div')\n\t\t\tlet styleRules = []; // Additional style rules to prepend when done\n\t\t\tsetHtml(sourceDoc, html); // Splat HTML into temporary div\n\n\t\t\tlet doc = settings.fixContentTrim\n\t\t\t\t? sourceDoc.querySelector('.doc-content') // Narrow down to just the contents\n\t\t\t\t: sourceDoc\n\n\t\t\tif (settings.keepStyle) {\n\t\t\t\tlet style = sourceDoc.querySelector('style[type=\"text/css\"]');\n\t\t\t\tdoc.prepend(style);\n\t\t\t}\n\n\t\t\t// fixWidth and/or fixPadding {{{\n\t\t\tif (settings.fixWidth || settings.fixPadding) {\n\t\t\t\tdoc.setAttribute('style', [\n\t\t\t\t\tsettings.fixWidth && 'max-width: none',\n\t\t\t\t\tsettings.fixPadding && 'padding: 0 20px',\n\t\t\t\t]\n\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t.join(';\\n')\n\t\t\t\t);\n\t\t\t}\n\t\t\t// }}}\n\t\t\t// fixTableWidth {{{\n\t\t\tif (settings.fixTableWidth) {\n\t\t\t\tstyleRules.push(\n\t\t\t\t\t`${settings.selector} table { max-width: none !important; padding: 1.5rem 0 }`, // Let last table row max out width\n\t\t\t\t\t`${settings.selector} table td:last-child { width: auto !important }`, // Let last table row max out width\n\t\t\t\t);\n\t\t\t}\n\t\t\t// }}}\n\t\t\t// fixParaMargins {{{\n\t\t\tif (settings.fixParaMargins) {\n\t\t\t\tstyleRules.push(`${settings.selector} p { margin-bottom: 1rem }`);\n\t\t\t}\n\t\t\t// }}}\n\t\t\t// fixLinkTargets and/or fixLinkShorten {{{\n\t\t\tif (settings.fixLinkTargets || settings.fixLinkShorten) {\n\t\t\t\tdoc.querySelectorAll('a')\n\t\t\t\t\t|> els => Array.from(els)\n\t\t\t\t\t.filter(el => /^https?:\\/\\//.test(el.getAttribute('href')))\n\t\t\t\t\t.forEach(el => {\n\t\t\t\t\t\t// fixLinkTargets\n\t\t\t\t\t\tif (settings.fixLinkTargets) el.setAttribute('target', '_blank')\n\n\t\t\t\t\t\t// fixLinkShorten\n\t\t\t\t\t\tif (settings.fixLinkShorten) el.setAttribute('href', el.getAttribute('href')\n\t\t\t\t\t\t\t.replace(/^https:\\/\\/www\\.google\\.com\\/url\\?q=(.*?)&.*$/, '$1') // Remove `&...` slush from GitHub URLs\n\t\t\t\t\t\t\t.replace(/^https:\\/\\/www\\.google\\.com\\/url\\?q=/, '') // Rewrite all other URLs,\n\t\t\t\t\t\t\t.replace(/^(.+)$/, link => unescape(link)) // De-encode URL characters like '#'\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\t// }}}\n\t\t\t// fixImageTitleAsLink {{{\n\t\t\tif (settings.fixImageTitleAsLink) {\n\t\t\t\tdoc.querySelectorAll('img[title]')\n\t\t\t\t\t|> els => Array.from(els)\n\t\t\t\t\t.filter(el => /^https?:\\/\\//.test(el.getAttribute('title')))\n\t\t\t\t\t.forEach(el => {\n\t\t\t\t\t\tlet wrapper = document.createElement('a');\n\t\t\t\t\t\twrapper.setAttribute('href', el.getAttribute('title'));\n\t\t\t\t\t\tif (settings.fixLinkTargets) wrapper.setAttribute('target', '_blank');\n\n\t\t\t\t\t\tel.replaceWith(wrapper);\n\t\t\t\t\t\twrapper.replaceChildren(el);\n\t\t\t\t\t})\n\t\t\t}\n\t\t\t// }}}\n\n\t\t\tif (styleRules.length > 0) { // Append any override styles we have\n\t\t\t\tlet styleSheet = document.createElement('style');\n\t\t\t\tstyleSheet.setAttribute('type', 'text/css');\n\t\t\t\tsetHtml(styleSheet, styleRules.join('\\n'));\n\t\t\t\tdoc.prepend(styleSheet);\n\t\t\t}\n\n\t\t\tsettings.onMount(doc);\n\t\t\tembedEl.replaceChildren(doc);\n\t\t})\n}\n"],"names":["window","embedGDoc","embedGdoc","options","settings","selector","url","urlOptions","cache","headers","keepStyle","fixContentTrim","fixWidth","fixTableWidth","fixPadding","fixLinkTargets","fixLinkShorten","fixImageTitleAsLink","onLoad","html","onMount","el","setHtml","setHTML","innerHTML","Error","embedEl","document","querySelector","fetch","then","res","text","sourceDoc","createElement","styleRules","doc","style","prepend","setAttribute","filter","Boolean","join","push","fixParaMargins","querySelectorAll","Array","from","els","test","getAttribute","forEach","replace","link","unescape","wrapper","replaceWith","replaceChildren","length","styleSheet"],"version":3,"file":"embed-gdocs.js.map"}