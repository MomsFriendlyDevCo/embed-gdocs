{"mappings":"AAAAA,OAAOC,SAAS,GAAG,SAASC,UAAUC,OAAO,EAAE;IAC9C,IAAIC,WAAW;QACdC,UAAU,IAAI;QACdC,KAAK,IAAI;QACTC,YAAY;YACXC,OAAO;YACPC,SAAS;gBACR,UAAU;YACX;QACD;QACAC,UAAU,IAAI;QACdC,YAAY,IAAI;QAChBC,gBAAgB,IAAI;QACpBC,gBAAgB,IAAI;QACpB,GAAGV,OAAH;IACD;IACA,IAAI,CAACC,SAASC,QAAQ,EAAE,MAAM,IAAIS,MAAM,8BAAxC;IACA,IAAI,CAACV,SAASE,GAAG,EAAE,MAAM,IAAIQ,MAAM,yBAAnC;IAEA,IAAIC,UAAUC,SAASC,aAAa,CAACb,SAASC,QAAQ;IACtD,IAAI,CAACU,SAAS,MAAM,IAAID,MAAO,CAAA,sBAAA,EAAwBV,SAASC,QAAS,CAAA,cAAA,CAAe,EAAxF;IAEA,OAAOa,MAAMd,SAASE,GAAG,EAAEF,SAASG,UAAU,EAC5CY,IAAI,CAACC,CAAAA,MAAOA,IAAIC,IAAI,IACpBF,IAAI,CAACG,CAAAA,OAAQ;QACb,IAAIC,MAAMP,SAASQ,aAAa,CAAC;QACjCD,IAAIE,OAAO,CAACH,OAAO,gCAAnBC;QACAA,MAAMA,IAAIN,aAAa,CAAC,iBAAiB,mCAAzCM;QAEA,iCAAA;QACA,IAAInB,SAASM,QAAQ,IAAIN,SAASO,UAAU,EAC3CY,IAAIN,aAAa,CAAC,OAAOS,YAAY,CAAC,SAAS;YAC9CtB,SAASM,QAAQ,IAAI;YACrBN,SAASO,UAAU,IAAI;SACvB,CACCgB,MAAM,CAACC,SACPC,IAAI,CAAC;QAGR,MAAA;QACA,iBAAA;QACA,IAAIzB,SAASO,UAAU,EACtBY,IAAIN,aAAa,CAAC,OAAOS,YAAY,CAAC,SAAS;QAEhD,MAAA;QACA,2CAAA;QACA,IAAItB,SAASQ,cAAc,IAAIR,SAASS,cAAc,EAAE;YAAA,IAAA;YACvD,wBAAAU,IAAIO,gBAAgB,CAAC,MACVC,MAAMC,IAAI,CAACC,uBACpBN,MAAM,CAACO,CAAAA,KAAM,eAAeC,IAAI,CAACD,GAAGE,YAAY,CAAC,UACjDC,OAAO,CAACH,CAAAA,KAAM;gBACd,iBAAA;gBACA,IAAI9B,SAASQ,cAAc,EAAEsB,GAAGR,YAAY,CAAC,UAAU;gBAEvD,iBAAA;gBACA,IAAItB,SAASS,cAAc,EAAEqB,GAAGR,YAAY,CAAC,QAAQQ,GAAGE,YAAY,CAAC,QACnEE,OAAO,CAAC,iDAAiD,MAAM,uCADjE;iBAEEA,OAAO,CAAC,wCAAwC,IAAI,yBADW;;YAGlE,EAAE;QACJ,CAAA;QACA,MAAA;QAEAvB,QAAQwB,eAAe,CAAChB;IACzB;AACF","sources":["src/embed-gdocs.js"],"sourcesContent":["window.embedGDoc = function embedGdoc(options) {\n\tlet settings = {\n\t\tselector: null,\n\t\turl: null,\n\t\turlOptions: {\n\t\t\tcache: 'default',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'text/html',\n\t\t\t},\n\t\t},\n\t\tfixWidth: true,\n\t\tfixPadding: true,\n\t\tfixLinkTargets: true,\n\t\tfixLinkShorten: true,\n\t\t...options,\n\t};\n\tif (!settings.selector) throw new Error('Selector must be specified');\n\tif (!settings.url) throw new Error('URL must be specified');\n\n\tlet embedEl = document.querySelector(settings.selector);\n\tif (!embedEl) throw new Error(`Cannot find selector \"${settings.selector} to embed GDoc`);\n\n\treturn fetch(settings.url, settings.urlOptions)\n\t\t.then(res => res.text())\n\t\t.then(html => {\n\t\t\tlet doc = document.createElement('div')\n\t\t\tdoc.setHTML(html); // Splat HTML into temporary div\n\t\t\tdoc = doc.querySelector('.doc-content'); // Narrow down to just the contents\n\n\t\t\t// fixWidth and/or fixPadding {{{\n\t\t\tif (settings.fixWidth || settings.fixPadding) {\n\t\t\t\tdoc.querySelector('div').setAttribute('style', [\n\t\t\t\t\tsettings.fixWidth && 'max-width: none',\n\t\t\t\t\tsettings.fixPadding && 'padding: 0 20px',\n\t\t\t\t]\n\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t.join(';\\n')\n\t\t\t\t);\n\t\t\t}\n\t\t\t// }}}\n\t\t\t// fixPadding {{{\n\t\t\tif (settings.fixPadding) {\n\t\t\t\tdoc.querySelector('div').setAttribute('style', 'padding: 0 20px');\n\t\t\t}\n\t\t\t// }}}\n\t\t\t// fixLinkTargets and/or fixLinkShorten {{{\n\t\t\tif (settings.fixLinkTargets || settings.fixLinkShorten) {\n\t\t\t\tdoc.querySelectorAll('a')\n\t\t\t\t\t|> els => Array.from(els)\n\t\t\t\t\t.filter(el => /^https?:\\/\\//.test(el.getAttribute('href')))\n\t\t\t\t\t.forEach(el => {\n\t\t\t\t\t\t// fixLinkTargets\n\t\t\t\t\t\tif (settings.fixLinkTargets) el.setAttribute('target', '_blank')\n\n\t\t\t\t\t\t// fixLinkShorten\n\t\t\t\t\t\tif (settings.fixLinkShorten) el.setAttribute('href', el.getAttribute('href')\n\t\t\t\t\t\t\t.replace(/^https:\\/\\/www\\.google\\.com\\/url\\?q=(.*?)&.*$/, '$1') // Remove `&...` slush from GitHub URLs\n\t\t\t\t\t\t\t.replace(/^https:\\/\\/www\\.google\\.com\\/url\\?q=/, '') // Rewrite all other URLs\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\t// }}}\n\n\t\t\tembedEl.replaceChildren(doc);\n\t\t})\n}\n"],"names":["window","embedGDoc","embedGdoc","options","settings","selector","url","urlOptions","cache","headers","fixWidth","fixPadding","fixLinkTargets","fixLinkShorten","Error","embedEl","document","querySelector","fetch","then","res","text","html","doc","createElement","setHTML","setAttribute","filter","Boolean","join","querySelectorAll","Array","from","els","el","test","getAttribute","forEach","replace","replaceChildren"],"version":3,"file":"embed-gdocs.js.map","sourceRoot":"../"}