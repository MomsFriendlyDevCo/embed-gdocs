{"mappings":"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","sources":["src/embed-gdocs.js"],"sourcesContent":["/**\n* Embed a Google-Docs document within a webpage\n* @param {Object} options Options to configure behaviour\n* @param {string|HTMLElement} options.selector Either the DOM node to replace or a selector to use\n* @param {string} options.url The Google Docs published URL to embed - this generally ends in `/pub?embedded=true`\n* @param {Object} [options.urlOptions] Additional Fetch options when retrieving the document from the `url`\n* @param {boolean} [options.fixContentTrim=true] Remove the outer wrapping of the element and just use the embedded content\n* @param {boolean} [options.fixWidth=true] Remove page width restrictions\n* @param {boolean} [options.fixPadding=true] Remove page padding\n* @param {boolean} [options.fixLinkTargets=true] Make all links open in a new tab instead of replacing the current one\n* @param {boolean} [options.fixLinkShorten=true] Remove Google tracking URL prefix from links\n* @param {boolean} [options.fixImageTitleAsLink=true] If an image \"alternative text\" (actually the `title` attribute) looks like a link make the image linkable - this is to fix how Google Docs weirdly handles image linking\n*\n*/\nwindow.embedGDoc = function embedGdoc(options) {\n\tlet settings = {\n\t\tselector: null,\n\t\turl: null,\n\t\turlOptions: {\n\t\t\tcache: 'default',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'text/html',\n\t\t\t},\n\t\t},\n\t\tfixContentTrim: true,\n\t\tfixWidth: true,\n\t\tfixPadding: true,\n\t\tfixLinkTargets: true,\n\t\tfixLinkShorten: true,\n\t\tfixImageTitleAsLink: true,\n\t\t...options,\n\t};\n\tif (!settings.selector) throw new Error('Selector must be specified');\n\tif (!settings.url) throw new Error('URL must be specified');\n\n\tlet embedEl = typeof settings.selector == 'string'\n\t\t? document.querySelector(settings.selector)\n\t\t: settings.selector;\n\n\tif (!embedEl) throw new Error(`Cannot find selector \"${settings.selector} to embed GDoc`);\n\n\treturn fetch(settings.url, settings.urlOptions)\n\t\t.then(res => res.text())\n\t\t.then(html => {\n\t\t\tlet doc = document.createElement('div');\n\t\t\t(typeof doc.setHTML === 'function') ? doc.setHTML(html) : doc.innerHTML = html; // Splat HTML into temporary div\n\n\t\t\tif (settings.fixContentTrim) // Narrow down to just the contents\n\t\t\t\tdoc = doc.querySelector('.doc-content');\n\n\t\t\t// fixWidth and/or fixPadding {{{\n\t\t\tif (settings.fixWidth || settings.fixPadding) {\n\t\t\t\tdoc.querySelector('div').setAttribute('style', [\n\t\t\t\t\tsettings.fixWidth && 'max-width: none',\n\t\t\t\t\tsettings.fixPadding && 'padding: 0 20px',\n\t\t\t\t]\n\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t.join(';\\n')\n\t\t\t\t);\n\t\t\t}\n\t\t\t// }}}\n\t\t\t// fixPadding {{{\n\t\t\tif (settings.fixPadding) {\n\t\t\t\tdoc.querySelector('div').setAttribute('style', 'padding: 0 20px');\n\t\t\t}\n\t\t\t// }}}\n\t\t\t// fixLinkTargets and/or fixLinkShorten {{{\n\t\t\tif (settings.fixLinkTargets || settings.fixLinkShorten) {\n\t\t\t\tdoc.querySelectorAll('a')\n\t\t\t\t\t|> els => Array.from(els)\n\t\t\t\t\t.filter(el => /^https?:\\/\\//.test(el.getAttribute('href')))\n\t\t\t\t\t.forEach(el => {\n\t\t\t\t\t\t// fixLinkTargets\n\t\t\t\t\t\tif (settings.fixLinkTargets) el.setAttribute('target', '_blank')\n\n\t\t\t\t\t\t// fixLinkShorten\n\t\t\t\t\t\tif (settings.fixLinkShorten) el.setAttribute('href', el.getAttribute('href')\n\t\t\t\t\t\t\t.replace(/^https:\\/\\/www\\.google\\.com\\/url\\?q=(.*?)&.*$/, '$1') // Remove `&...` slush from GitHub URLs\n\t\t\t\t\t\t\t.replace(/^https:\\/\\/www\\.google\\.com\\/url\\?q=/, '') // Rewrite all other URLs\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\t// }}}\n\t\t\t// fixImageTitleAsLink {{{\n\t\t\tif (settings.fixImageTitleAsLink) {\n\t\t\t\tdoc.querySelectorAll('img[title]')\n\t\t\t\t\t|> els => Array.from(els)\n\t\t\t\t\t.filter(el => /^https?:\\/\\//.test(el.getAttribute('title')))\n\t\t\t\t\t.forEach(el => {\n\t\t\t\t\t\tlet wrapper = document.createElement('a');\n\t\t\t\t\t\twrapper.setAttribute('href', el.getAttribute('title'));\n\t\t\t\t\t\tif (settings.fixLinkTargets) wrapper.setAttribute('target', '_blank');\n\n\t\t\t\t\t\tel.replaceWith(wrapper);\n\t\t\t\t\t\twrapper.replaceChildren(el);\n\t\t\t\t\t})\n\t\t\t}\n\t\t\t// }}}\n\n\t\t\tembedEl.replaceChildren(doc);\n\t\t})\n}\n"],"names":["window","embedGDoc","embedGdoc","options","settings","selector","url","urlOptions","cache","headers","fixContentTrim","fixWidth","fixPadding","fixLinkTargets","fixLinkShorten","fixImageTitleAsLink","Error","embedEl","document","querySelector","fetch","then","res","text","html","doc","createElement","setHTML","innerHTML","setAttribute","filter","Boolean","join","querySelectorAll","Array","from","els","el","test","getAttribute","forEach","replace","wrapper","replaceWith","replaceChildren"],"version":3,"file":"module.js.map"}